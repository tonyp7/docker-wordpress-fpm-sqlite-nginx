limit_req_zone $binary_remote_addr zone=wploginlimit:10m rate=1r/s;

server {
	listen			80;
	server_name		localhost;

	root   /var/www/html;
		
	location / {
		index  index.php;
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		fastcgi_pass   wordpress:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  /var/www/html/$fastcgi_script_name;
		include		fastcgi_params;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
	}
	
	# Prevent brute force
	location /wp-login.php {
		limit_req zone=wploginlimit burst=5 nodelay;
	}
	
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd
	location ~ /\. {
		deny all;
	}
	
	# Only allow request to XMLRPC from authorized IPs
	location = /xmlrpc.php {
		allow 172.25.1.101;
		allow 172.25.1.100;
		deny all;
	}

	# If somehow, a hacker successfully sneaks in a PHP file onto your site, theyâ€™ll be able to run this file by loading file 
	# which effectively becomes a backdoor to infiltrate your site. 
	# We should disable direct access to any PHP files by adding the following rules:
	location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
		deny all;
	}
}